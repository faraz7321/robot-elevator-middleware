{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "The Webhook management API provides consumer all the important information of an equipment such as status information, maintenance service information etc. in a near real-time using webhook subscriptions. Webhook uses Publisher-Subscriber mechanism where the API Ecosystem publishes the events and the consumer subscribes to the particular type of an event. Webhook gives an advantage that the consumer does not need to request for an equipment information manually and receives an events automatically as soon as there is any change in the information at API Ecosystem.\n\nTo start receiving an events automatically, the consumer needs to create a webhook subscription for an API application. While creating webhook subscription, the consumer provides an webhook endpoint to receive the equipment information in an event. Also, consumer subscribes to the particular type of events for which the equipment information is sent on their webhook endpoint.\n\nIn order to get the equipment events, an access token needs to be generated by using the credentials of an API application created. After the access token is acquired with the client credential flow, the consumer can create a webhook subscription for an API application. Once the subscription is created, it will be in a PENDING state. As soon as this subscription receives an event from API Ecosystem, the state of a webhook subscription will be changed to ENABLED.\n",
    "title" : "Webhook management API",
    "version" : "v1"
  },
  "servers" : [ {
    "url" : "https://dev.kone.com"
  } ],
  "security" : [ {
    "OpenID" : [ "" ]
  } ],
  "paths" : {
    "/api/v1/application/self/webhooks" : {
      "get" : {
        "description" : "There are some limitations to the number of active subscriptions one consumer can have. For Sandbox application, one can have maximum of one subscription with ENABLED or PENDING state. For production application, one cannot subscribe to the same event type simultaneously from another subscription. To view all the subscriptions, the consumer can use List webhook subscription API. In response, all the subscriptions for an API application are sent to the consumer.",
        "operationId" : "listWebhookSubscriptions",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "id" : "9c5dc915-b025-42fe-b604-a6035951b98b",
                  "status" : "PENDING",
                  "types" : [ "com.kone.elevator.movement.completed.v1" ],
                  "webhookEndpoint" : "https://example.com/webhook",
                  "subscribedResourceIds" : [ "ken:11111111" ],
                  "createdAt" : "2021-05-28T06:17:24.302Z",
                  "updatedAt" : "2021-05-28T06:17:24.302Z",
                  "contactEmail" : "example@example.com",
                  "subscriptionName" : "my subscription"
                } ],
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/WebhookSubscription"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "List of webhook subscriptions associated with this API application."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Token does not contain required scopes. Required: [application/subscriptions]. Had: [application/inventory]"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "application/subscriptions scope is missing"
          }
        },
        "security" : [ {
          "OpenID" : [ "application/subscriptions" ]
        } ],
        "summary" : "List webhook subscriptions",
        "tags" : [ "Webhooks" ]
      },
      "post" : {
        "description" : "Create webhook subscription for your API application. When the create subscription has been requested, the subscription status is set to PENDING and an automatic test event is sent to the provided endpoint.\nIf the endpoint responds successfully to the test event, the subscription status is automatically changed to ENABLED.\nInstead, if a failure happens, the 10-time retrial mechanism is triggered.\nIn case the field \"contactEmail\" is provided, the notification service is activated and whenever the subscription changes from PENDING / ENABLED state to DISABLED an email is sent to the contact provided.\n",
        "operationId" : "createWebhookSubscription",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "subscribedResourceIds" : [ "ken:11111111" ],
                "types" : [ "com.kone.elevator.movement.completed.v1" ],
                "webhookEndpoint" : "https://example.com/webhook",
                "endpointSecret" : "REPLACE_WITH_SECRET",
                "contactEmail" : "example@example.com",
                "subscriptionName" : "my subscription"
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateWebhookSubscription"
              }
            }
          },
          "description" : "Webhook subscription to create.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "id" : "9c5dc915-b025-42fe-b604-a6035951b98b",
                  "status" : "PENDING",
                  "types" : [ "com.kone.elevator.movement.completed.v1" ],
                  "webhookEndpoint" : "https://example.com/webhook",
                  "createdAt" : "2021-05-28T06:17:24.302Z",
                  "updatedAt" : "2021-05-28T06:17:24.302Z",
                  "contactEmail" : "example@example.com",
                  "subscriptionName" : "my subscription"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookSubscription"
                }
              }
            },
            "description" : "Created webhook subscription."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "\"endpointSecret\" is required"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid parameters."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Token does not contain required scopes. Required: [application/subscriptions]. Had: [application/inventory]"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "application/subscriptions scope is missing"
          }
        },
        "security" : [ {
          "OpenID" : [ "application/subscriptions" ]
        } ],
        "summary" : "Create webhook subscription",
        "tags" : [ "Webhooks" ]
      }
    },
    "/api/v1/application/self/webhooks/{webhookId}" : {
      "delete" : {
        "description" : "If the consumer does not need the subscription anymore, then they can use Delete webhook subscription API to permanently delete the subscription from an API application. To delete the webhook subscription, the consumer needs to send a bearer token and the webhook id which is received while creating the webhook subscription.",
        "operationId" : "deleteWebhookSubscription",
        "parameters" : [ {
          "description" : "The ID of the webhook subscription",
          "example" : "876018e5-517a-4946-b570-3414bc165e21",
          "explode" : false,
          "in" : "path",
          "name" : "webhookId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Webhook subscription was deleted successfully."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Token does not contain required scopes. Required: [application/subscriptions]. Had: [application/inventory]"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "application/subscriptions scope is missing"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Not found"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "No webhook subscription found with given ID. Note that webhook subscriptions are application specific.\n"
          }
        },
        "security" : [ {
          "OpenID" : [ "application/subscriptions" ]
        } ],
        "summary" : "Delete webhook subscription",
        "tags" : [ "Webhooks" ]
      },
      "get" : {
        "description" : "If the  consumer wants to fetch the details of one webhook subscription, then they can use Get webhook subscription API. To get the details of a webhook subscription, the consumer needs to send a bearer token and the webhook id which is received while creating the webhook subscription.",
        "operationId" : "getWebhookSubscription",
        "parameters" : [ {
          "description" : "The ID of the webhook subscription",
          "example" : "9c5dc915-b025-42fe-b604-a6035951b98b",
          "explode" : false,
          "in" : "path",
          "name" : "webhookId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "id" : "9c5dc915-b025-42fe-b604-a6035951b98b",
                  "status" : "PENDING",
                  "types" : [ "com.kone.elevator.movement.completed.v1" ],
                  "webhookEndpoint" : "https://example.com/webhook",
                  "createdAt" : "2021-05-28T06:17:24.302Z",
                  "updatedAt" : "2021-05-28T06:17:24.302Z",
                  "contact­Email" : "example@example.com",
                  "subscriptionName" : "my subscription"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookSubscription"
                }
              }
            },
            "description" : "Webhook subscription."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Token does not contain required scopes. Required: [application/subscriptions]. Had: [application/inventory]"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "application/subscriptions scope is missing"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Not found"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "No webhook subscription found with given ID. Note that webhook subscriptions are application specific.\n"
          }
        },
        "security" : [ {
          "OpenID" : [ "application/subscriptions" ]
        } ],
        "summary" : "Get webhook subscription",
        "tags" : [ "Webhooks" ]
      },
      "patch" : {
        "description" : "Consumer can use Update webhook subscription API to change the state of a webhook subscription as per the requirement. If the consumer needs to disable webhook subscription, they need to mention it in the status field of a request payload. Along with status, consumer needs to mention the subsctiptionName for which the consumer wants to update the webhook subscription. In case the consumer wants to enable the subscription from a disabled state, then firstly the state is changed to PENDING. Only when an automated test event is sent to the webhook endpoint successfully, then the subscription is changed to ENABLED. Also, this API gives an opportunity to a consumer to add contactEmail  if it is not added while creating the subscription. This same email is used to activate the notifications.\n",
        "operationId" : "updateWebhookSubscription",
        "parameters" : [ {
          "description" : "The ID of the webhook subscription",
          "example" : "876018e5-517a-4946-b570-3414bc165e21",
          "explode" : false,
          "in" : "path",
          "name" : "webhookId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "status" : "DISABLED",
                "contactEmail" : "example@example.com",
                "subscriptionName" : "my subscription"
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateWebhookSubscription"
              }
            }
          },
          "description" : "Updates on the webhook subscription.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "id" : "9c5dc915-b025-42fe-b604-a6035951b98b",
                  "status" : "DISABLED",
                  "types" : [ "com.kone.elevator.movement.completed.v1" ],
                  "webhookEndpoint" : "https://example.com/webhook",
                  "createdAt" : "2021-05-28T06:17:24.302Z",
                  "updatedAt" : "2021-05-28T06:17:24.302Z",
                  "contactEmail" : "example@example.com",
                  "subscriptionName" : "my subscription"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookSubscription"
                }
              }
            },
            "description" : "Updated webhook subscription."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Not an allowed state transition. Allowed state transitions are: DISABLED"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid parameters or illegal state transition"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Token does not contain required scopes. Required: [application/subscriptions]. Had: [application/inventory]"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "application/subscriptions scope is missing"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Not found"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "No webhook subscription found with given ID. Note that webhook subscriptions are application specific.\n"
          }
        },
        "security" : [ {
          "OpenID" : [ "application/subscriptions" ]
        } ],
        "summary" : "Update webhook subscription",
        "tags" : [ "Webhooks" ]
      }
    },
    "/api/v1/application/self/webhooks/{webhookId}/test" : {
      "post" : {
        "description" : "Triggers an test event that will be sent to the webhook",
        "operationId" : "triggerTestEvent",
        "parameters" : [ {
          "description" : "The ID of the webhook subscription",
          "example" : "876018e5-517a-4946-b570-3414bc165e21",
          "explode" : false,
          "in" : "path",
          "name" : "webhookId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "202" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "id" : "9c5dc915-b025-42fe-b604-a6035951b98b",
                  "subject" : "542c3103-4b70-482a-b971-616ac981e987",
                  "time" : "2021-06-24T08:53:26.972Z",
                  "type" : "com.kone.test.v1",
                  "source" : "http://dev.koneapi.com/webhook/542c3103-4b70-482a-b971-616ac981e987",
                  "specversion" : "1.0",
                  "data" : {
                    "clientId" : "eb229908-c1fd-4abe-aa2d-bfb933f4e985",
                    "subscriptionId" : "542c3103-4b70-482a-b971-616ac981e987",
                    "triggeredBy" : "user"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookEvent"
                }
              }
            },
            "description" : "Event that is going to be sent to the webhook subscription endpoint."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "\"value\" must be a valid GUID"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid parameters."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Token does not contain required scopes. Required: [application/subscriptions]. Had: [application/inventory]"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "application/subscriptions scope is missing"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Not found"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "No webhook subscription found with given ID. Note that webhook subscriptions are application specific.\n"
          }
        },
        "security" : [ {
          "OpenID" : [ "application/subscriptions" ]
        } ],
        "summary" : "Trigger webhook test event",
        "tags" : [ "Webhooks" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "EventType" : {
        "description" : "Event types that can be subscribed to.\n\nEnum descriptions:\n* `com.kone.test.v1` - Test event\n* `com.kone.elevator.movement.completed.v1` - Elevator journey has been completed.\n* `com.kone.equipment.availability.v1` - Equipment availability status changed.\n* `com.kone.equipment.status.v1` - Information realted to equipment status.\n* `com.kone.escalator.movement.change.v1` - Information realted to escalotor movement change.\n* `com.kone.equipment.serviceorder.v2` - Service order details for provided equipment.\n",
        "enum" : [ "com.kone.test.v1", "com.kone.elevator.movement.completed.v1", "com.kone.equipment.availability.v1", "com.kone.equipment.status.v1", "com.kone.escalator.movement.change.v1", "com.kone.equipment.serviceorder.v2" ],
        "type" : "string"
      },
      "Ken" : {
        "description" : "KEN for the equipment with 'ken':prefix.\n",
        "type" : "string"
      },
      "WebhookSubscriptionStatus" : {
        "description" : "Webhook subscription status.\n\nEnum descriptions:\n* `PENDING` - is waiting for successful test event delivery.\n* `ENABLED` - is receiving events.\n* `DISABLED` - is not receiving events.\n",
        "enum" : [ "PENDING", "ENABLED", "DISABLED" ],
        "type" : "string"
      },
      "WebhookSubscription" : {
        "description" : "Webhook subscription",
        "properties" : {
          "id" : {
            "description" : "Unique ID for the webhook subscription",
            "example" : "876018e5-517a-4946-b570-3414bc165e21",
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/WebhookSubscriptionStatus"
          },
          "types" : {
            "description" : "Events that this subscription is subscribed to.",
            "example" : [ "com.kone.elevator.movement.completed.v1" ],
            "items" : {
              "$ref" : "#/components/schemas/EventType"
            },
            "type" : "array"
          },
          "webhookEndpoint" : {
            "description" : "URL to where send the webhook calls.",
            "example" : "https://example.com/webhook",
            "type" : "string"
          },
          "subscribedResourceIds" : {
            "description" : "Resource IDs for which webhook subscription is created.",
            "example" : "ken:11111111",
            "items" : {
              "$ref" : "#/components/schemas/Ken"
            },
            "type" : "array"
          },
          "createdAt" : {
            "description" : "Time when subscription was created as ISO 8601 timestamp.",
            "example" : "2021-05-28T06:17:24.302Z",
            "format" : "date-time",
            "type" : "string"
          },
          "updatedAt" : {
            "description" : "Time when subscription was last updated as ISO 8601 timestamp.",
            "example" : "2021-05-28T06:17:24.302Z",
            "format" : "date-time",
            "type" : "string"
          },
          "contactEmail" : {
            "description" : "Email to which a notification is sent if the subscription gets disabled.",
            "example" : "example@example.com",
            "type" : "string"
          },
          "subscriptionName" : {
            "description" : "Name of the subscription",
            "example" : "my subscription",
            "type" : "string"
          }
        },
        "required" : [ "clientId", "createdAt", "id", "status", "subscriptionName", "types", "updatedAt", "webhookEndpoint" ],
        "type" : "object"
      },
      "CreateWebhookSubscription" : {
        "description" : "Parameters to create a webhook subscription",
        "properties" : {
          "types" : {
            "description" : "Events that this subscription is subscribed to.",
            "example" : [ "com.kone.elevator.movement.completed.v1" ],
            "items" : {
              "$ref" : "#/components/schemas/EventType"
            },
            "type" : "array"
          },
          "subscribedResourceIds" : {
            "description" : "Resource IDs for which webhook subscription is created.",
            "example" : "ken:11111111",
            "items" : {
              "$ref" : "#/components/schemas/Ken"
            },
            "type" : "array"
          },
          "webhookEndpoint" : {
            "description" : "URL to be be called when an event occurs. The production applications must use HTTPS. The sandbox applications can use either HTTPS or HTTP. For production applications HTTPS must use valid TLS certificate. Sandbox applications can use self-signed or otherwise non-authorized TLS certificates.",
            "example" : "https://example.com/webhook",
            "type" : "string"
          },
          "endpointSecret" : {
            "description" : "Secret used to sign the webhook content.",
            "example" : "REPLACE_WITH_SECRET",
            "type" : "string"
          },
          "contactEmail" : {
            "description" : "Email to which a notification is sent if the subscription gets disabled.",
            "example" : "example@example.com",
            "type" : "string"
          },
          "subscriptionName" : {
            "description" : "Name of the subscription",
            "example" : "my subscription",
            "type" : "string"
          }
        },
        "required" : [ "endpointSecret", "subscribedResourceIds", "subscriptionName", "types", "webhookEndpoint" ],
        "type" : "object"
      },
      "UpdateWebhookSubscription" : {
        "description" : "Parameters to update a webhook subscription",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/WebhookSubscriptionStatus"
          },
          "contactEmail" : {
            "description" : "Email to which a notification is sent if the subscription gets disabled.",
            "example" : "example@example.com"
          },
          "subscriptionName" : {
            "description" : "Name of the subscription",
            "example" : "my subscription",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "WebhookEvent" : {
        "description" : "Event sent to the webhook subscription endpoint.",
        "properties" : {
          "id" : {
            "description" : "ID of an event. Can be used to e.g. correlate this call on the receiving end.",
            "example" : "c394b43e-bb84-4d27-b6ca-f64b051d7b0b",
            "type" : "string"
          },
          "type" : {
            "description" : "Type of the event. For test events this is always com.kone.test.v1.",
            "enum" : [ "com.kone.test.v1" ],
            "example" : "com.kone.test.v1",
            "type" : "string"
          },
          "subject" : {
            "description" : "Subject of the event. For test events this is always the ID of the webhook subscription.",
            "type" : "string"
          },
          "time" : {
            "description" : "The time of event.",
            "format" : "date-time",
            "type" : "string"
          },
          "source" : {
            "description" : "Endpoint of the webhook subscription.",
            "type" : "string"
          },
          "specversion" : {
            "description" : "This is the version of payload schema, this version will change when payload changes.",
            "type" : "string"
          },
          "data" : {
            "$ref" : "#/components/schemas/WebhookTestEventPayload"
          }
        },
        "required" : [ "data", "id", "subject", "time", "type" ],
        "type" : "object"
      },
      "WebhookTestEventPayload" : {
        "description" : "Test event payload",
        "properties" : {
          "clientId" : {
            "description" : "The client ID of the application.",
            "example" : "eb229908-c1fd-4abe-aa2d-bfb933f4e985",
            "type" : "string"
          },
          "subscriptionId" : {
            "description" : "The ID of the webhook subscription.",
            "example" : "542c3103-4b70-482a-b971-616ac981e987",
            "type" : "string"
          },
          "triggeredBy" : {
            "description" : "The client ID of the application.",
            "example" : "user",
            "type" : "string"
          }
        },
        "required" : [ "clientId", "subscriptionId", "triggeredBy" ],
        "type" : "object"
      },
      "Error" : {
        "description" : "Error",
        "properties" : {
          "message" : {
            "description" : "Human readable description of an error",
            "example" : "Something went wrong.",
            "type" : "string"
          },
          "errors" : {
            "description" : "A more detailed list of errors",
            "items" : {
              "$ref" : "#/components/schemas/DetailedError"
            },
            "type" : "array"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "DetailedError" : {
        "description" : "Detailed error",
        "properties" : {
          "type" : {
            "description" : "Type of the error, for user code to react to",
            "type" : "string"
          },
          "bodyPath" : {
            "description" : "path of the error in the body object, if request was json then this is a json path",
            "type" : "string"
          },
          "urlPath" : {
            "description" : "describes where in URL the error was",
            "type" : "string"
          },
          "header" : {
            "description" : "describes which header was wrong",
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "OpenID" : {
        "openIdConnectUrl" : "/api/v1/oauth2/.well-known/openid-configuration",
        "type" : "openIdConnect"
      }
    }
  }
}